  services:
    postgres: 
      image: postgres:13
      environment:
        POSTGRES_USER: airflow  
        POSTGRES_PASSOWRD: airflow
        POSTGRES_DB: airflow
      volumes:  
        -postgres-db-volume:/var/lib/postgresql/data
      healthcheck:
        test: ["CMD", "pg_isready", "-U" , "airflow"]
        interval: 5s
        retries: 5
      restart: always



docker run -it \
    -e POSTGRES_USER="root" \
    -e POSTGRES_PASSWORD="root" \ 
    -e POSGRES_DB="nyc_taxi"  \
    -v /C:/Users\CSAS/Desktop/Files!/DS-Materials/DEZP/ny_taxi_postgres_data   \ 
    -p 5432:5432 \
    postgres:13

#https://www1.nyc.gov/site/tlc/about/tlc-trip-record-data.page#



docker run -it\ 
  -e PGADMIN_DEFAULT_EMAIL="admin@admin.com" \
  -e PGADMIN_DEFAULT_PASSWORD="root" \
  -p 8080:80 \
  dpage/pgadmin4
docker pull dpage/pgAdmin4


## network

docker network create pg-network


docker run -it \
    -e POSTGRES_USER="root" \
    -e POSTGRES_PASSWORD="root" \ 
    -e POSGRES_DB="nyc_taxi"
    -v $(pwd)/nyc_taxi_postgres_data:/var/lib/postgresql/data
    -p(port number) \
    --network=pg-network
    --name pg-database
    postgres:13


docker run -it\ 
  -e PGADMIN_DEFAULT_EMAIL="admin@admin.com" \
  -e PGADMIN_DEFAULT_PASSWORD="root" \
  -p 8080:80 \
  --network=pg-network \ 
  --name pgadmin-2\ 
  dpage/pgadmin4  

URL = "https://s3.amazonaws.com/nyc-tlc/trip+data/yellow_tripdata_2021-01.csv"

docker build -t taxi_ingest:v001 . 
docker run -it\ 
 --network=pg-network \
  taxi_ingest.data.py \ 
    --user= root \
    --password= root \ 
    --host = localhost \
    --port= 5432 \
    --db = ny_taxi \
    --table_name = yellow_taxi_trips \ 
    --url = ${URL} 